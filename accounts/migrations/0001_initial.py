# Generated by Django 5.2.4 on 2025-07-31 12:27

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="InvoicePayment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        choices=[
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("bank_transfer", "Virement bancaire"),
                            ("cash", "Espèces"),
                            ("check", "Chèque"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Méthode de paiement",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("processing", "En cours"),
                            ("completed", "Terminé"),
                            ("failed", "Échoué"),
                            ("cancelled", "Annulé"),
                            ("refunded", "Remboursé"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "stripe_payment_intent_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="PaymentIntent Stripe",
                    ),
                ),
                (
                    "paypal_payment_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Payment ID PayPal",
                    ),
                ),
                (
                    "transaction_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Frais de transaction",
                    ),
                ),
                (
                    "reference",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="Référence"
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "completed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de completion"
                    ),
                ),
            ],
            options={
                "verbose_name": "Paiement de facture",
                "verbose_name_plural": "Paiements de factures",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceReminder",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "reminder_type",
                    models.CharField(
                        choices=[
                            ("before_due", "Avant échéance"),
                            ("on_due_date", "Le jour de l'échéance"),
                            ("after_due", "Après échéance"),
                        ],
                        max_length=20,
                        verbose_name="Type de rappel",
                    ),
                ),
                ("days_offset", models.IntegerField(verbose_name="Décalage en jours")),
                (
                    "sent_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'envoi"
                    ),
                ),
                (
                    "email_sent",
                    models.BooleanField(default=False, verbose_name="Email envoyé"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "verbose_name": "Rappel de facture",
                "verbose_name_plural": "Rappels de factures",
                "ordering": ["days_offset"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nom du template"),
                ),
                (
                    "company_name",
                    models.CharField(
                        max_length=200, verbose_name="Nom de l'entreprise"
                    ),
                ),
                (
                    "company_address",
                    models.TextField(verbose_name="Adresse de l'entreprise"),
                ),
                (
                    "company_logo",
                    models.ImageField(
                        blank=True,
                        null=True,
                        upload_to="invoice_templates/",
                        verbose_name="Logo de l'entreprise",
                    ),
                ),
                (
                    "footer_text",
                    models.TextField(blank=True, verbose_name="Texte de pied de page"),
                ),
                (
                    "tax_rate",
                    models.DecimalField(
                        decimal_places=2,
                        default=20.0,
                        max_digits=5,
                        verbose_name="Taux de TVA (%)",
                    ),
                ),
                (
                    "payment_terms",
                    models.TextField(
                        default="Paiement à réception de facture",
                        verbose_name="Conditions de paiement",
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Template par défaut"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Template de facture",
                "verbose_name_plural": "Templates de factures",
                "ordering": ["-is_default", "name"],
            },
        ),
        migrations.CreateModel(
            name="OrphanTransaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        max_length=20, verbose_name="Fournisseur de paiement"
                    ),
                ),
                (
                    "provider_transaction_id",
                    models.CharField(
                        max_length=255, verbose_name="ID transaction fournisseur"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                ("status", models.CharField(max_length=50, verbose_name="Statut")),
                (
                    "provider_data",
                    models.JSONField(verbose_name="Données complètes du fournisseur"),
                ),
                (
                    "webhook_received_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Reçu le"),
                ),
                (
                    "investigated",
                    models.BooleanField(
                        default=False, verbose_name="Enquête effectuée"
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, verbose_name="Notes d'investigation"),
                ),
            ],
            options={
                "verbose_name": "Transaction orpheline",
                "verbose_name_plural": "Transactions orphelines",
                "ordering": ["-webhook_received_at"],
            },
        ),
        migrations.CreateModel(
            name="PaymentMethod",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "card_type",
                    models.CharField(
                        choices=[
                            ("visa", "Visa"),
                            ("mastercard", "Mastercard"),
                            ("amex", "American Express"),
                            ("discover", "Discover"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Type de carte",
                    ),
                ),
                (
                    "card_number_hash",
                    models.CharField(
                        max_length=64, verbose_name="Hash du numéro de carte"
                    ),
                ),
                (
                    "last4",
                    models.CharField(max_length=4, verbose_name="4 derniers chiffres"),
                ),
                (
                    "cardholder_name",
                    models.CharField(max_length=100, verbose_name="Nom du porteur"),
                ),
                ("expiry_month", models.IntegerField(verbose_name="Mois d'expiration")),
                ("expiry_year", models.IntegerField(verbose_name="Année d'expiration")),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Méthode par défaut"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Méthode de paiement",
                "verbose_name_plural": "Méthodes de paiement",
                "ordering": ["-is_default", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="RecurringInvoiceTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(max_length=100, verbose_name="Nom du modèle"),
                ),
                (
                    "frequency",
                    models.CharField(
                        choices=[
                            ("weekly", "Hebdomadaire"),
                            ("monthly", "Mensuelle"),
                            ("quarterly", "Trimestrielle"),
                            ("yearly", "Annuelle"),
                        ],
                        max_length=20,
                        verbose_name="Fréquence",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Date de début")),
                (
                    "end_date",
                    models.DateField(blank=True, null=True, verbose_name="Date de fin"),
                ),
                (
                    "next_invoice_date",
                    models.DateField(verbose_name="Prochaine facture"),
                ),
                (
                    "description_template",
                    models.TextField(verbose_name="Template de description"),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                ("is_active", models.BooleanField(default=True, verbose_name="Actif")),
                (
                    "auto_send",
                    models.BooleanField(
                        default=False, verbose_name="Envoi automatique"
                    ),
                ),
                (
                    "invoices_generated",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Factures générées"
                    ),
                ),
                (
                    "last_generated",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Dernière génération"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Facture récurrente",
                "verbose_name_plural": "Factures récurrentes",
                "ordering": ["next_invoice_date"],
            },
        ),
        migrations.CreateModel(
            name="Transaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "order_id",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="ID de commande"
                    ),
                ),
                (
                    "transaction_id",
                    models.CharField(
                        max_length=255, unique=True, verbose_name="ID de transaction"
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("manual", "Manuel"),
                        ],
                        max_length=20,
                        verbose_name="Fournisseur de paiement",
                    ),
                ),
                (
                    "provider_transaction_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        verbose_name="ID transaction fournisseur",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Montant"
                    ),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "processing_fee",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Frais de traitement",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "En attente"),
                            ("processing", "En cours"),
                            ("succeeded", "Réussie"),
                            ("failed", "Échouée"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, verbose_name="Description"),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "metadata",
                    models.JSONField(
                        blank=True, default=dict, verbose_name="Métadonnées"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Transaction",
                "verbose_name_plural": "Transactions",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="WebhookLog",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "provider",
                    models.CharField(
                        choices=[("stripe", "Stripe"), ("paypal", "PayPal")],
                        max_length=20,
                        verbose_name="Fournisseur",
                    ),
                ),
                (
                    "event_type",
                    models.CharField(max_length=100, verbose_name="Type d'événement"),
                ),
                (
                    "event_id",
                    models.CharField(max_length=255, verbose_name="ID d'événement"),
                ),
                ("payload", models.JSONField(verbose_name="Payload complet")),
                (
                    "signature_valid",
                    models.BooleanField(default=False, verbose_name="Signature valide"),
                ),
                (
                    "processed_successfully",
                    models.BooleanField(
                        default=False, verbose_name="Traité avec succès"
                    ),
                ),
                (
                    "error_message",
                    models.TextField(blank=True, verbose_name="Message d'erreur"),
                ),
                (
                    "processing_time_ms",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="Temps de traitement (ms)"
                    ),
                ),
                (
                    "received_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="Reçu le"),
                ),
            ],
            options={
                "verbose_name": "Log de webhook",
                "verbose_name_plural": "Logs de webhooks",
                "ordering": ["-received_at"],
            },
        ),
        migrations.CreateModel(
            name="Shopper",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        blank=True, max_length=254, verbose_name="email address"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(
                        blank=True, max_length=20, verbose_name="Numéro de téléphone"
                    ),
                ),
                (
                    "birth_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="Date de naissance"
                    ),
                ),
                ("address", models.TextField(blank=True, verbose_name="Adresse")),
                (
                    "newsletter_subscription",
                    models.BooleanField(
                        default=False, verbose_name="Abonnement à la newsletter"
                    ),
                ),
                (
                    "email_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications par email"
                    ),
                ),
                (
                    "sms_notifications",
                    models.BooleanField(
                        default=False, verbose_name="Notifications par SMS"
                    ),
                ),
                (
                    "push_notifications",
                    models.BooleanField(
                        default=True, verbose_name="Notifications push"
                    ),
                ),
                (
                    "two_factor_enabled",
                    models.BooleanField(
                        default=False, verbose_name="Authentification à deux facteurs"
                    ),
                ),
                (
                    "firebase_uid",
                    models.CharField(
                        blank=True,
                        max_length=128,
                        null=True,
                        unique=True,
                        verbose_name="Firebase UID",
                    ),
                ),
                (
                    "stripe_customer_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID Client Stripe",
                    ),
                ),
                (
                    "paypal_customer_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID Client PayPal",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Date de création"
                    ),
                ),
                (
                    "updated_at",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Dernière mise à jour"
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client",
                "verbose_name_plural": "Clients",
                "ordering": ["-date_joined"],
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Address",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "address_type",
                    models.CharField(
                        choices=[
                            ("home", "Domicile"),
                            ("work", "Travail"),
                            ("other", "Autre"),
                        ],
                        default="home",
                        max_length=10,
                    ),
                ),
                ("street", models.CharField(max_length=255, verbose_name="Rue")),
                ("city", models.CharField(max_length=100, verbose_name="Ville")),
                (
                    "state",
                    models.CharField(
                        blank=True, max_length=100, verbose_name="État/Province"
                    ),
                ),
                (
                    "postal_code",
                    models.CharField(max_length=20, verbose_name="Code postal"),
                ),
                (
                    "country",
                    models.CharField(
                        default="France", max_length=100, verbose_name="Pays"
                    ),
                ),
                (
                    "is_default",
                    models.BooleanField(
                        default=False, verbose_name="Adresse par défaut"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="addresses",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Adresse",
                "verbose_name_plural": "Adresses",
                "ordering": ["-is_default", "-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Invoice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "invoice_number",
                    models.CharField(
                        max_length=50, unique=True, verbose_name="Numéro de facture"
                    ),
                ),
                (
                    "uuid",
                    models.UUIDField(default=uuid.uuid4, editable=False, unique=True),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Brouillon"),
                            ("sent", "Envoyée"),
                            ("paid", "Payée"),
                            ("overdue", "En retard"),
                            ("cancelled", "Annulée"),
                            ("refunded", "Remboursée"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="Statut",
                    ),
                ),
                (
                    "issue_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="Date d'émission",
                    ),
                ),
                ("due_date", models.DateField(verbose_name="Date d'échéance")),
                (
                    "subtotal",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Sous-total HT",
                    ),
                ),
                (
                    "tax_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Montant TVA",
                    ),
                ),
                (
                    "discount_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Remise",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Total TTC",
                    ),
                ),
                (
                    "payment_method",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("stripe", "Stripe"),
                            ("paypal", "PayPal"),
                            ("bank_transfer", "Virement bancaire"),
                            ("cash", "Espèces"),
                            ("check", "Chèque"),
                            ("other", "Autre"),
                        ],
                        max_length=20,
                        verbose_name="Méthode de paiement",
                    ),
                ),
                (
                    "paid_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date de paiement"
                    ),
                ),
                (
                    "stripe_invoice_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID facture Stripe",
                    ),
                ),
                (
                    "paypal_invoice_id",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID facture PayPal",
                    ),
                ),
                ("notes", models.TextField(blank=True, verbose_name="Notes")),
                (
                    "terms_and_conditions",
                    models.TextField(blank=True, verbose_name="CGV"),
                ),
                (
                    "currency",
                    models.CharField(
                        default="EUR", max_length=3, verbose_name="Devise"
                    ),
                ),
                (
                    "sent_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date d'envoi"
                    ),
                ),
                (
                    "viewed_date",
                    models.DateTimeField(
                        blank=True,
                        null=True,
                        verbose_name="Date de première consultation",
                    ),
                ),
                (
                    "reminder_sent_count",
                    models.PositiveIntegerField(
                        default=0, verbose_name="Nombre de rappels envoyés"
                    ),
                ),
                (
                    "last_reminder_date",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="Date du dernier rappel"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "customer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="invoices",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="Client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Facture",
                "verbose_name_plural": "Factures",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="InvoiceItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "description",
                    models.CharField(max_length=255, verbose_name="Description"),
                ),
                (
                    "quantity",
                    models.DecimalField(
                        decimal_places=2,
                        default=1.0,
                        max_digits=10,
                        verbose_name="Quantité",
                    ),
                ),
                (
                    "unit_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="Prix unitaire"
                    ),
                ),
                (
                    "line_total",
                    models.DecimalField(
                        decimal_places=2,
                        default=0.0,
                        max_digits=10,
                        verbose_name="Total ligne",
                    ),
                ),
                (
                    "invoice",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="accounts.invoice",
                        verbose_name="Facture",
                    ),
                ),
            ],
            options={
                "verbose_name": "Ligne de facture",
                "verbose_name_plural": "Lignes de facture",
                "ordering": ["id"],
            },
        ),
    ]
