name: Django CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Set environment variables for testing
      run: |
        echo "DATABASE_URL=sqlite:///:memory:" >> $GITHUB_ENV
        echo "DEBUG=True" >> $GITHUB_ENV
        echo "SECRET_KEY=test-secret-key-for-ci" >> $GITHUB_ENV
        echo "ALLOWED_HOSTS=localhost,127.0.0.1" >> $GITHUB_ENV
        echo "STRIPE_PUBLISHABLE_KEY=pk_test_fake" >> $GITHUB_ENV
        echo "STRIPE_SECRET_KEY=sk_test_fake" >> $GITHUB_ENV
        echo "STRIPE_WEBHOOK_SECRET=whsec_test_fake" >> $GITHUB_ENV
        echo "PAYPAL_CLIENT_ID=test_paypal_id" >> $GITHUB_ENV
        echo "PAYPAL_CLIENT_SECRET=test_paypal_secret" >> $GITHUB_ENV
        echo "EMAIL_BACKEND=django.core.mail.backends.locmem.EmailBackend" >> $GITHUB_ENV

    - name: Run migrations
      run: |
        python manage.py migrate --verbosity=2

    - name: Collect static files
      run: |
        python manage.py collectstatic --noinput --verbosity=2

    - name: Run tests
      run: |
        python manage.py test --verbosity=2 --keepdb

    - name: Check for missing migrations
      run: |
        python manage.py makemigrations --check --verbosity=2

    - name: Check Django deployment readiness
      run: |
        python manage.py check --deploy --verbosity=2
